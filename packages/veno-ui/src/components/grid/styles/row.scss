@forward 'variables';
@use 'variables' as *;
@use 'mixins' as *;
@use '../../../styles/settings';
@use '../../../styles/tools';

// Row
//
// Rows contain and clear the floats of your columns.
.ve-row {
  display: flex;
  flex-wrap: wrap;
  flex: 1 1 auto;
  margin: calc(var(--ve-row-gutter, 0px) * -.5);

  @each $name, $value in settings.$grid-gutters {
    &--gutter-#{$name} {
      --ve-row-gutter: #{$value};
    }
  }

  & + .row {
    margin-top: calc(var(--ve-row-gutter) * .5);
  }

  > .ve-col,
  > [class*="ve-col-"] {
    padding: calc(var(--ve-row-gutter) * .5);
  }

  // Utilities
  @each $breakpoint in map-keys(settings.$grid-breakpoints) {
    @include tools.media-breakpoint-up($breakpoint) {
      $infix: tools.breakpoint-infix($breakpoint, settings.$grid-breakpoints);
      @each $key, $utility in $row-utilities {
        @if type-of($utility) == "map" and (map-get($utility, responsive) or $infix == "") {
          @include tools.generate-utility($utility, $infix, 'bidi');
        }
      }
    }
  }
}
