@forward 'variables';
@use 'sass:map';
@use 'sass:math';
@use 'variables' as *;
@use '../../../styles/tools';
@use '../../../styles/settings';

.ve-button {
  $root: &;
  --ve-button-height: calc(#{map.get($button-sizes, 'height')} + var(--ve-button-size-offset, 0px) + var(--ve-button-density-offset, 0px));
  position: relative;
  display: inline-flex;
  justify-content: center;
  align-items: center;
  outline: none;
  font-weight: $button-font-weight;
  line-height: $button-line-height;
  letter-spacing: $button-text-letter-spacing;
  text-transform: $button-text-transform;
  height: var(--ve-button-height);
  min-width: calc(var(--ve-button-height) * #{map.get($button-sizes, 'width-ratio')});
  padding: 0 calc(var(--ve-button-height) / #{map.get($button-sizes, 'padding-ratio')});
  transition-property: box-shadow, transform, opacity, color;
  transition-duration: 0.28s;
  transition-timing-function: settings.$standard-easing;
  user-select: none;
  text-decoration: none;
  vertical-align: $button-vertical-align;
  flex-shrink: 0;
  white-space: nowrap;
  @include tools.use-material($button-material);
  @include tools.overlay(#{&}__overlay);
  @include tools.states(#{&}__overlay, false);

  @each $name, $multiplier in settings.$sizes {
    &--size-#{$name} {
      font-size: #{math.max(12px, map.get($button-sizes, 'font-size') + $multiplier * settings.$spacer)};
    }
  }

  &--variant-link {
    padding: 0;
    user-select: auto;
    height: auto;
    min-width: auto;
    background: transparent;
    color: inherit;

    &:not(#{$root}--disabled):not(#{$root}--loading):hover {
      text-decoration: underline currentColor;
    }

    #{$root}__icon {
      font-size: 1em !important;
    }
  }

  &--icon {
    padding: 0;
    height: var(--ve-button-height);
    min-width: var(--ve-button-height);
    width: var(--ve-button-height);
  }

  &--block {
    min-width: 100%;
  }

  &--disabled {
    cursor: not-allowed;
  }

  &--loading {
    cursor: wait;
  }

  &--disabled {
    &#{$root}--disabled {
      color: rgba(var(--ve-theme-on-surface), $button-disabled-opacity);
      opacity: 1;

      #{$root}__overlay {
        opacity: 0;
      }
    }

    &#{$root}--variant-contained {
      background: rgb(var(--ve-theme-surface));

      #{$root}__overlay {
        opacity: math.div($button-disabled-overlay, $button-disabled-opacity);
      }
    }
  }

  &__icon {
    width: 1em !important;
    height: 1em !important;
    font-size: 1.5em !important;
  }

  // Pagination
  .ve-pagination & {
    width: auto;
  }
}