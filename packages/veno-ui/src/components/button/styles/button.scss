@use 'sass:map';
@use 'sass:math';
@forward 'variables';
@use 'variables' as *;
@use '../../../styles/tools';
@use '../../../styles/settings';

.ve-button {
  $root: &;
  --ve-button-height: calc(#{map.get($button-sizes, 'height')} + var(--ve-button-size-offset, 0px) + var(--ve-button-density-offset, 0px));
  --ve-button-font-size: #{map.get($button-sizes, 'font-size')};
  position: relative;
  display: inline-flex;
  justify-content: center;
  align-items: center;
  outline: none;
  font-weight: $button-font-weight;
  line-height: $button-line-height;
  letter-spacing: $button-text-letter-spacing;
  text-transform: $button-text-transform;
  transition-property: width, transform, opacity;
  transition-duration: 0.28s;
  transition-timing-function: settings.$standard-easing;
  user-select: none;
  text-decoration: none;
  cursor: pointer;
  font-size: var(--ve-button-font-size);
  height: var(--ve-button-height);
  min-width: calc(var(--ve-button-height) * #{map.get($button-sizes, 'width-ratio')});
  padding: 0 calc(var(--ve-button-height) / #{map.get($button-sizes, 'padding-ratio')});
  @include tools.use-material($button-material);

  @each $name, $multiplier in settings.$sizes {
    &--size-#{$name} {
      --ve-button-font-size: #{math.max(12px, map.get($button-sizes, 'font-size') + $multiplier * settings.$spacer)};
    }
  }

  &--variant-text {
    @at-root {
      // AppBarItems
      .ve-app-bar-items & {
        border-radius: 0;
        height: 100% !important;
        border-width: 0;
      }
    }
  }

  &--variant-link {
    padding: 0;
    user-select: auto;
    height: auto;
    min-width: auto;
    background: transparent;
    color: inherit;

    &:not(#{$root}--disabled):not(#{$root}--loading):hover {
      text-decoration: underline currentColor;
    }
  }

  &--variant-icon {
    padding: 0;
    height: var(--ve-button-height);
    min-width: var(--ve-button-height);
    color: tools.map-deep-get($button-material, 'variants', 'contained', 'color');
  }

  &--block {
    min-width: 100%;
  }

  &--loading,
  &--disabled {
    color: rgba(var(--ve-theme-on-surface), $button-disabled-opacity) !important;

    &#{$root}--variant-contained {
      --ve-button-overlay-opacity: #{$button-disabled-overlay-opacity};
    }

    &#{$root}--variant-contained {
      background: rgb(var(--ve-theme-surface)) !important;
    }
  }

  &--disabled {
    cursor: not-allowed;
  }

  &--loading {
    cursor: wait;
  }

  &__overlay {
    @include tools.absolute();
    background-color: currentColor;
    border-radius: inherit;
    pointer-events: none;
    opacity: var(--ve-button-overlay-opacity, 0);
    transition: opacity .2s ease-in-out;
  }

  &:not(&--disabled):not(&--loading) {
    @include tools.states('#{$root}__overlay', false);
  }

  // Progress
  .ve-progress {
    width: 1em !important;
    height: 1em !important;
    font-size: 1em !important;

    & + span {
      margin-inline-start: map.get(settings.$grid-gutters, 'md');
    }
  }
}