@forward './variables';
@use 'sass:map';
@use 'sass:list';
@use '../../../styles/settings';
@use '../../../styles/tools';
@use './variables' as *;

.ve-selection-control {
  // CSS Variables
  // --ve-selection-control---height
  --ve-height: calc(var(--ve-selection-control---height, 22px) + var(--ve-size-offset, 0px) + var(--ve-density-offset, 0px));
  align-items: center;
  align-self: center;
  cursor: pointer;
  display: inline-flex;
  min-height: var(--ve-height);
  position: relative;
  user-select: none;
  @include tools.use-size();
  @include tools.use-density((
    densities: $selection-control-density
  ));

  &--dirty {
    .ve-icon {
      color: inherit;
    }
  }

  &--disabled {
    opacity: var(--ve-disabled-opacity);
    pointer-events: none;
  }

  &--error {
    color: rgb(var(--ve-theme-error));

    .ve-icon {
      color: inherit;
    }
  }

  .ve-icon {
    opacity: var(--ve-medium-emphasis-opacity);
    width: 100%;
    height: 100%;
    font-size: 16px;
  }

  .ve-label {
    padding-inline-start: 6px;
    padding-inline-end: 6px;
  }

  &__wrapper {
    position: relative;
    flex: none;
  }

  &__input {
    position: relative;
    display: flex;
    align-items: center;
    justify-content: center;
    width: 100%;
    height: 100%;
    flex: none;

    input {
      cursor: pointer;
      position: absolute;
      left: 0;
      top: 0;
      width: 100%;
      height: 100%;
      opacity: 0;
    }

    &::before {
      @include tools.absolute();
      content: '';
      border-radius: 100%;
      background-color: currentColor;
      opacity: 0;
      pointer-events: none;
    }

    &:hover::before {
      opacity: calc(#{map.get(settings.$states, 'hover')} * var(--ve-theme-overlay-multiplier));
    }

    .ve-selection-control--focus-visible &::before {
      opacity: calc(#{map.get(settings.$states, 'focus')} * var(--ve-theme-overlay-multiplier));
    }
  }
}