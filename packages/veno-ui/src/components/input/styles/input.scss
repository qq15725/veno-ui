@forward 'variables';
@use 'sass:math';
@use '../../../styles/tools';
@use '../../../styles/settings';
@use 'variables' as *;

// Blocks
.ve-input {
  $root: &;

  // Modifiers
  @include tools.density('ve-form-control', (
    'ultra-high': -4,
    'high': -2,
    'medium': 0,
    'low': 2,
    'ultra-low': 4,
  )) using($modifier) {
    --ve-input--textarea-line-height: #{1.4285714285714286 + math.div($modifier * .125, settings.$spacer) * 1.5};
  }

  // Elements
  &__textarea-mirror {
    height: 0 !important;
    left: 0;
    min-height: 0 !important;
    pointer-events: none;
    position: absolute;
    top: 0;
    visibility: hidden;
  }

  &__input-mirror {
    left: 0;
    opacity: 0 !important;
    position: absolute;
    top: 0;
    user-select: none;
    visibility: hidden;
    white-space: pre;
    width: 0 !important;
  }

  @at-root {
    // NativeControl
    .ve-native-control {
      #{$root} & {
        flex: 1 1 0;
        opacity: 1 !important;
        transition: .15s opacity settings.$standard-easing;
      }

      #{$root}--no-resize & {
        resize: none;
      }

      #{$root}--auto-resize & {
        overflow: hidden;
      }

      #{$root}--textarea & {
        align-self: stretch;
        outline: none;
        line-height: var(--ve-input--textarea-line-height, 1.75);
      }
    }

    // FormControlLabel
    .ve-form-control__label {
      #{$root}--textarea.ve-form-control--horizontal &,
      #{$root}--textarea.ve-form-control--inline & {
        align-items: start;
        line-height: var(--ve-input--textarea-line-height, 1.75);
      }
    }
  }
}
