@forward 'variables';
@use 'sass:map';
@use 'variables' as *;
@use '../../../styles/tools';
@use '../../../styles/settings';

.ve-input-control {
  --ve-input-control__input-padding-before: 0;
  --ve-input-control__input-padding-after: 0;
  --ve-input-padding-before: 16px;
  --ve-input-padding-after: 16px;
  position: relative;
  display: flex;
  align-items: center;
  border-radius: 4px;
  contain: layout;
  flex: 1 0;
  grid-area: control;
  height: var(--ve-form-item-height, 42px);
  color: rgb(var(--ve-theme-on-secondary));
  background-color: rgb(var(--ve-theme-secondary));
  border: 1px solid transparent;
  transition: .1s settings.$decelerated-easing;
  transition-property: color, background-color, border-color;

  &--active {
    color: rgb(var(--ve-theme-on-surface));
    background-color: rgb(var(--ve-theme-surface));
    border-color: rgb(var(--ve-theme-primary));
  }

  &--prepended {
    --ve-input-padding-before: 6px;
    padding-inline-start: 12px;
  }

  &--prefixed {
    --ve-input-padding-before: 6px;
    --ve-input-control__input-padding-before: 12px;
  }

  &--suffixed {
    --ve-input-padding-after: 6px;
    --ve-input-control__input-padding-after: 12px;
  }

  &--appended {
    --ve-input-padding-after: 6px;
    padding-inline-end: 12px;
  }

  &__prefix,
  &__suffix {
    position: relative;
    display: inline-flex;
    align-items: center;
    height: 100%;
    opacity: var(--ve-medium-emphasis-opacity);
    white-space: nowrap;
  }

  &__input {
    position: relative;
    display: flex;
    align-items: center;
    flex: 1 0;
    height: 100%;
    cursor: text;
    padding-inline-start: var(--ve-input-control__input-padding-before);
    padding-inline-end: var(--ve-input-control__input-padding-after);

    input {
      color: inherit;
      cursor: inherit;
    }
  }

  &__clearable {
    opacity: 0;
    margin-inline-end: 4px;
    transition: .15s settings.$standard-easing;
    transition-property: opacity, transform, width;

    .ve-button {
      font-size: 16px;
      min-width: 28px;
      min-height: 28px;
      border-radius: 50%;
    }
  }

  &--focused &__clearable,
  &:hover &__clearable {
    opacity: 1;
  }

  &::before {
    @include tools.absolute();
    content: '';
    border-radius: inherit;
    background-color: currentColor;
    opacity: 0;
    pointer-events: none;
  }

  &:not(&--active):hover::before {
    opacity: calc(#{map.get(settings.$states, 'hover')} * var(--ve-theme-overlay-multiplier));
  }
}
