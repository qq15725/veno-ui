@use 'sass:map';
@use '../../../styles/tools';
@use '../../../styles/settings';

// Blocks
.ve-input-control {
  $root: &;
  // CSS Variables
  // --ve-native-control---padding-bottom 4px
  // --ve-native-control---padding-left 12px
  // --ve-native-control---padding-right 12px
  // --ve-native-control---padding-top 4px
  position: relative;
  display: flex;
  align-items: center;
  width: var(--ve-control-width, inherit);
  min-height: var(--ve-control-height, inherit);
  transition: .1s settings.$decelerated-easing;
  transition-property: color, background-color;
  @include tools.use-border();
  @include tools.use-shape();
  @include tools.use-variant((
    'variants': (
      'contained': (
        'background': rgb(var(--ve-theme-secondary)),
        'color': rgb(var(--ve-theme-on-secondary)),
      ),
      'text': (
        'color': rgb(var(--ve-theme-on-secondary)),
      )
    ),
  ));

  // Modifiers
  &--appended {
    --ve-native-control---padding-right: 4px;
    padding-inline-end: 12px;
  }

  &--disabled {
    opacity: var(--ve-disabled-opacity);
    pointer-events: none;
  }

  &--focused {
    color: rgb(var(--ve-theme-on-surface));
    background-color: rgb(var(--ve-theme-surface));
    border-color: rgb(var(--ve-theme-primary));

    #{$root}__border {
      opacity: 1 !important;
      color: rgb(var(--ve-theme-primary)) !important;
      box-shadow: 0 0 0 2px rgba(var(--ve-theme-primary), var(--ve-focus-opacity));
    }
  }

  &--prepended {
    --ve-native-control---padding-left: 4px;
    padding-inline-start: 12px;
  }

  &--prefixed {
    --ve-native-control---padding-left: 4px;
    --ve-padding-left: 12px;
  }

  &--suffixed {
    --ve-native-control---padding-right: 4px;
    --ve-padding-right: 12px;
  }

  // Elements
  &__prepend-inner,
  &__prefix,
  &__suffix,
  &__clearable,
  &__append-inner {
    position: relative;
    display: inline-flex;
    align-items: center;
    min-height: inherit;
    white-space: nowrap;
  }

  &__prefix,
  &__suffix {
    opacity: var(--ve-medium-emphasis-opacity);
  }

  &__input {
    position: relative;
    display: flex;
    align-items: center;
    flex: 1 0;
    min-height: inherit;
    cursor: text;
    padding-inline-start: var(--ve-padding-left, 0px);
    padding-inline-end: var(--ve-padding-right, 0px);
  }

  .ve-native-control {
    display: flex;
    align-items: center;
    width: 100%;
    min-height: inherit;
    padding-inline-start: var(--ve-native-control---padding-left, 12px);
    padding-inline-end: var(--ve-native-control---padding-right, 12px);
    padding-block-start: var(--ve-native-control---padding-top, 4px);
    padding-block-end: var(--ve-native-control---padding-bottom, 4px);
    opacity: var(--ve-high-emphasis-opacity);
    cursor: inherit;

    &:focus,
    &:active {
      outline: none;
    }

    // Remove Firefox red outline
    &:invalid {
      box-shadow: none;
    }
  }

  &__clearable {
    visibility: hidden;
    opacity: var(--ve-medium-emphasis-opacity);

    &--has-append-inner {
      display: none;
    }

    > .ve-button {
      --ve-button---height: auto;
      font-size: inherit;

      > .ve-button__overlay {
        top: -15%;
        left: -15%;
        width: 130%;
        height: 130%;
      }
    }
  }

  &--dirty:hover &__clearable {
    visibility: visible;
    display: inline-flex;
  }

  &::before {
    @include tools.absolute();
    content: '';
    border-radius: inherit;
    background-color: currentColor;
    opacity: 0;
    pointer-events: none;
  }

  &:not(&--active):hover::before {
    opacity: calc(#{map.get(settings.$states, 'hover')} * var(--ve-theme-overlay-multiplier));
  }
}
