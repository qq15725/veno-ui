@forward 'variables';
@use '../../../styles/tools';
@use '../../../styles/settings';
@use 'variables' as *;

.ve-button-group {
  --ve-button-group-height: calc(32px + var(--ve-button-group-size-offset, 0px) + var(--ve-button-group-density-offset, 0px));
  display: inline-flex;
  flex-wrap: nowrap;
  flex: 1 1;
  max-width: 100%;
  min-width: 0;
  height: var(--ve-button-group-height);
  @include tools.use-paper((
    'variants': (
      'contained': (
        'background': rgb(var(--ve-theme-secondary)),
        'color': rgb(var(--ve-theme-on-secondary)),
      ),
    ),
    'positions': absolute fixed,
    'borders': (
      'default': (
        'color': settings.$border-color,
        'style': settings.$border-style,
        'width': 0,
      ),
      'existence': (
        'width': thin,
      )
    ),
  ));

  .ve-button.ve-button--selected:not(.ve-button--disabled) {
    .ve-button__overlay {
      opacity: var(--ve-activated-opacity);
    }
  }

  .ve-button {
    border-radius: 0 !important;

    &:first-child {
      border-top-left-radius: inherit !important;
      border-bottom-left-radius: inherit !important;
    }

    &:last-child {
      border-top-right-radius: inherit !important;
      border-bottom-right-radius: inherit !important;
    }

    &:not(:last-child) {
      border-right: none;
    }

    &:not(:first-child) {
      border-left: none;
    }
  }

  &--divided {
    .ve-button:not(:last-child) {
      border-right-width: $button-group-border-thin-width;
      border-right-style: $button-group-border-style;
      border-right-color: $button-group-border-color;
    }
  }
}