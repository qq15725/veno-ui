@use 'sass:map';
@use 'sass:string';
@use 'variables';
@use '../../../styles/tools/functions' as tools;
@use '../../../styles/tools/elevation' as *;

@mixin use-variant($props: ()) {
  $name: string.insert(string.slice(#{&}, 2), '.', 0);
  $props: tools.map-deep-merge(variables.$variant-props, $props);

  @if map.get($props, 'use-variant') {
    $variants: map.get($props, 'variants');

    // Elements
    #{$name}__border {
      bottom: 0;
      border-color: currentColor;
      border-radius: inherit;
      border-style: inherit;
      border-width: thin;
      opacity: 0;
      pointer-events: none;
      position: absolute;
      right: 0;
      top: 0;
      left: 0;
    }

    #{$name}__underlay {
      background-color: currentColor;
      border-radius: inherit;
      bottom: 0;
      opacity: 0;
      pointer-events: none;
      position: absolute;
      right: 0;
      top: 0;
      left: 0;
    }

    // Modifiers
    &#{$name}--variant-plain,
    &#{$name}--variant-outlined,
    &#{$name}--variant-text,
    &#{$name}--variant-contained-text,
    &#{$name}--variant-contained-outlined {
      background-color: transparent;
      color: inherit;
    }

    &#{$name}--variant-contained {
      background-color: tools.map-deep-get($variants, 'contained', 'background');
      color: tools.map-deep-get($variants, 'contained', 'color');
      $elevation: tools.map-deep-get($variants, 'contained', 'elevation');
      @if ($elevation > 0) {
        @include elevation($elevation);
      }
    }

    &#{$name}--variant-plain {
      opacity: tools.map-deep-get($variants, 'plain', 'opacity');

      #{$name}__overlay {
        display: none;
      }

      &:focus,
      &:hover {
        opacity: 1;
      }
    }

    &#{$name}--variant-text {
      #{$name}__overlay {
        background-color: currentColor;
      }
    }

    &#{$name}--variant-contained-text,
    &#{$name}--variant-contained-outlined {
      #{$name}__underlay {
        opacity: var(--ve-activated-opacity);
      }
    }

    &#{$name}--variant-outlined:not(#{$name}--border),
    &#{$name}--variant-contained-outlined:not(#{$name}--border) {
      #{$name}__border {
        opacity: .26;
      }
    }
  }
}
